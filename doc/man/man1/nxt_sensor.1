.\" This manpage is free software; the Free Software Foundation
.\" gives unlimited permission to copy, distribute and modify it.
.\" 
.\"
.\" Process this file with
.\" groff -man -Tascii nxt_sensor.1
.\"
.TH NXT_SENSOR 1 "JUNE 2008" Linux "User Manuals"
.SH NAME
nxt_sensor \- Get a value from a analog LEGO mindstorms NXT sensor
.SH SYNOPSIS
.B nxt_sensor [
.I options
.B ]
.SH DESCRIPTION
Get a value from a analog LEGO mindstorms NXT sensor. 
.br
Analog sensors are the Lego mindstorms NXT light sensor, 
the Lego mindstorms NXT touch sensor and the Lego mindstorms NXT sound sensor. 
.br
Some third party sensors (like the HiTechnic NXT Gyro Sensor) are also
analog sensors which can be used with the
.I nxt_sensor (1)
program. Please note, that most third party sensors are digital sensors 
and require either the use of 
.I nxt_sensorus (1)
or special written functions similar to the nxt_us_* 
.I libnxt(3)
functions. 

The use of the shell command
.I nxt_sensor (1)
itself is not very usefull over bluetooth, cause the initialisation of the 
bluetooth connection needs about 5 seconds in average.
.br
See the
.I nxt_server (1)
program and its examples for a better shell script solution.
.SH AVAILABILITY 
Linux
.SH OPTIONS
.IP "-m mode"
The sensor
.I mode
setting is responsible for the interpretation of the output. 
Valid sensors modes are: 
.br
                raw
.br
                boolean
.br
                transition_count
.br
                period_count
.br
                percent
.br
                celsius
.br
                fahrenheit
.br
                angle_step
.br
The default 
.I mode
is "raw".
.IP "-n nxtname"
Use the NXT with name 
.I "nxtname" 
\&. The default is the first found brick. 
.sp
Additionally, the bluetooth address of the NXT brick can be used as
.I nxtname
\&. You can get the bluetooth address and name of your USB connected
NXT brick by using
.I nxt_info(1)
.IP "-s sensor"
The 
.I sensor
values are: 1, 2, 3, 4. If the -s option is missing, but the -t option is
used, the value is depends on the type/sensorportnumber combinations, defined
by Lego itself.

.nf
        Type        Sensorport

        reflection  3
        light*      3
        sound*      2
        switch      1
        custom      1
        lowspeed*   1
.fi


If neither the sensorport nor the sensortype is given, the default sensorport
is 1.
.IP "-t type"
The sensor type defines, how to interpret the values from a sensor.
.br
Valid sensor types are:
.br
none
.br
switch
.br
temperature
.br
reflection
.br
angle
.br
light_active
.br
light_inactive
.br
sound_db
.br
sound_dba
.br
custom
.br
lowspeed
.br
lowspeed_9v
.br
The default 
.I type
is "none".
.IP -r
Reset sensor after reading
.IP -v         
Verbose mode: print value and unit.
.SH EXIT STATUS
.LP
The following exit values shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
A error occured. If the error is caused by a problem of the NXT brick itself, 
a matching errorstring to the exit value can be displayed with the 
.I nxt_error(1) 
command.
.sp
.SH EXAMPLES
nxt_sensor -n 01:23:45:67:89:ab 
.LP
Connect to the NXT brick with bluetooth address "01:23:45:67:89:ab" via 
bluetooth and get the value of the sensor at port 1 in raw mode.
.SH CAVEATS
You can not get automatically access to the NXT brick.

Either you need access rights to the NXT usb device. Use root rights or see  
.I nxt_udev(8) 
for more information.

Or you need to pair the bluetooth devices of the host computer and the 
NXT brick. There are several programs to do this, one is 
"kbluetoothd".
.SH AUTHOR
Janosch Graef
.\" man page author: J. "MUFTI" Scheurich (IITS Universitaet Stuttgart)
.SH "SEE ALSO"
.BR libnxt (3), 
.BR nxt_sensor_us (1),
.BR nxt_server (1),
.BR nxt_error (1),
.BR nxt_udev (8),
.BR nxt_info (1)

